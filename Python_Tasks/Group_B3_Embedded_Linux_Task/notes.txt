on_key_event
append_to_notes
#import keyboard library to monitor keyboard events
import keyboard
#import pyperclip library to access copied data in clipboard
import pyperclip


# A flag to indicate when to append clipboard content to notes
append_to_notes = False
# A flag to end the program execution
End_Program = True
import keyboard
import subprocess
import datetime
import pyperclip

notes_filename = "notes.txt"

def on_triggered():
    copied_text = pyperclip.paste()
    if copied_text:
        with open(notes_filename, "a") as notes_file:
            notes_file.write(copied_text + "\n")
            print("Copied content appended to notes.")

def listen_for_shortcut():
    # Set the desired shortcut key combination (Example: Ctrl + Alt + S)
    shortcut = "ctrl + alt + s"

    # Register the callback function for the shortcut
    keyboard.add_hotkey(shortcut, on_triggered)

    # Continuously listen for keyboard events
    keyboard.wait()


# Start listening for the shortcut
listen_for_shortcut()

import keyboard
import subprocess
import datetime
import pyperclip

notes_filename = "notes.txt"

def on_triggered():
    copied_text = pyperclip.paste()
    if copied_text:
        with open(notes_filename, "a") as notes_file:
            notes_file.write(copied_text + "\n")
            print("Copied content appended to notes.")

def listen_for_shortcut():
    # Set the desired shortcut key combination (Example: Ctrl + Alt + S)
    shortcut = "ctrl + alt + s"

    # Register the callback function for the shortcut
    keyboard.add_hotkey(shortcut, on_triggered)

    # Continuously listen for keyboard events
    keyboard.wait()


# Start listening for the shortcut
listen_for_shortcut()

add_hotkey
shortcut
wait
